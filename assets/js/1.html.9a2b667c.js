"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[41],{6262:(e,t)=>{t.A=(e,t)=>{const i=e.__vccOpts||e;for(const[e,n]of t)i[e]=n;return i}},1041:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>r,data:()=>l});var n=i(641);const a=(0,n.Lk)("h1",{id:"studded-vs-studless-lego-technic",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#studded-vs-studless-lego-technic"},[(0,n.Lk)("span",null,"Studded vs studless lego technic")])],-1),s=(0,n.Fv)('<h2 id="was-old-technic-really-better" tabindex="-1"><a class="header-anchor" href="#was-old-technic-really-better"><span>Was Old Technic Really Better?</span></a></h2><p>For half of technics lifespan all of these sets were primarily studded but which type of lego technic is truly the king? In order to properly anwer the question we need to analyze the main categories the community of both systems the impact. I will give a point to either studded of studless technic for each of these categories whichever technic style gets the most points will be the ultimate winner.</p><h2 id="mechanisms" tabindex="-1"><a class="header-anchor" href="#mechanisms"><span>Mechanisms</span></a></h2><p>Studded technic sets received all of the main innovations, like transmission, pneumatics, distribution gear box, steering, suspension, etc. Studded technic is completely compatible in lego system sets and is used in many of those as structural support. Many importand mechanisms were largely refinements of old ones. Studless technic certainly brought us way better at electronics. But still, lego technics is mostly about mechanisms <a href="#1">[1]</a>.</p><p>I have to give the point here to the studded technic.</p><h2 id="playability" tabindex="-1"><a class="header-anchor" href="#playability"><span>Playability</span></a></h2><p>Let&#39;s examine the playability. The functions of the non-rc sets from either era are almost the same. Both eras feature basic things like suspension, steering and more. Personally I think that remotely controlled sets are a lot more fun to play with. Especially if they also have a motorized gearbox. I would even argue that the new powered up motors are much better for playability. While they are certanly overpriced, it has never been easier to combine mindstorms and technic that it is right now. Currently, you can learn about mechanisms and programming while before it was only about the mechanisms. On the other hand, using power functions in 9 V electronics is simply way easier. It&#39;s a simple plug and play experience and everything just works. The older systems were much cheaper, way easier to use and did not required a whole new learning curve. Still, for the majority of studdless technic, power functions was the main electronic system. RC was simply non-existent in studded technic <a href="#1">[1]</a>.</p><p>As a result I have to give the point here to the studdless technic.</p><h2 id="aesthenics" tabindex="-1"><a class="header-anchor" href="#aesthenics"><span>Aesthenics</span></a></h2><p>Studded sets all look incredible. Ultimately studded technic looks a lot kike your traditional system set. Studded technic just looks better when placed in an environment surrounded by studs. Studless allows you to have much more compact builds which allows for more complex mechanisms in smaller sets. Studless has a lot of panels which makes everything smoother and have a lot less gaps <a href="#1">[1]</a>.</p><p>Ultimately the aesthetics realy boild down to personal opinion.</p><h2 id="design-considerations" tabindex="-1"><a class="header-anchor" href="#design-considerations"><span>Design considerations</span></a></h2><p>With the studded technic sets, they are little difficult to work with, however, because the square corners often &quot;poke&quot; into whatever framework you are building with. Additionally, they stick out more on one side than the other, because the holes are not aligned centrally vertically on the brick. It made it tricky for designers to work with <a href="#2">[2]</a>.</p><p>But there is also a slight inconsistency in the technic bricks as well. Not only are the holes not centrally vertically aligned, they are also slightly too high. To match the system, they are supposed to be positioned such that placing a normal brick into the holes will align the side of the attached brick with the upper surface of the technic brick. But is is just a bit too high <a href="#2">[2]</a>.</p><p>With studded components, you&#39;re constrained by the form factor of the regular LEGO brick, which isn&#39;t a cube but a 5:5:6 cuboid. This means that every time you need to change the orientation of things, you&#39;ll have to think about how you&#39;re going to do it, and use plates and what not between components. It&#39;s perfectly possible, but don&#39;t be surprised if most of the components in older Technic models are studs up <a href="#3">[3]</a>.</p><p>Manufacturing the studded components is significantly more complex and hence more expensive. They have more plastic in them (they weigh more) which also pushes up the cost. But the mould complexity is the real killer. If you look carefully there&#39;s a void over the top of the holes in the component. That means moulds with moving parts, and the more parts the more it costs <a href="#3">[3]</a>.</p><p>Then LEGO switched to using studdless components instead. These do not have the annoying studs and brick corners on them - plus they are nice and square, making them a lot easiers to work with for technic designers. With studless components, none of that. Orientation of the components doesn&#39;t matter much anymore since they&#39;ll fit nicely on a cubic grid. And there is no more errors n the geometry. Studless are exactly 1 unit width high, in contrast to studded components, which are a non-integer multiple of one unit. It can be awkward to use studded components in vertical structures because it is necessary to insert plates between the studded components in order to get the holes to line up. Studless components allow greater flexibility when building in multiple dimensions, while remaining compatible with &quot;classic&quot; studded components <a href="#4">[4]</a>.</p><p>However, studless construction also introduces disadvantages. Studless construction is not immediately intuitive, requiring the builder to think five or six steps ahead. While studded construction follows the classic bottom-to-top building pattern, studless construction requires building inside-to-outside. Studless constructions are noted to often be more flexible than an equivalent studded construction. This is due to the amount of flex in the clip-based pins which are used to attach studdless parts together, whereas studs provide a more rigid friction fit <a href="#4">[4]</a>.</p><p>One side effect of the transition is that most studless Technic constructions have odd dimensions, because the studless components themselves have odd dimensions (presumably, because the number of holes on studded components were also odd due to the offset). As a consequence, the whole Technic system is undergoing a complete overhaul <a href="#3">[3]</a>.</p><p>I have to give the point here to the studless technic.</p><h2 id="patenting" tabindex="-1"><a class="header-anchor" href="#patenting"><span>Patenting</span></a></h2><p>I believe the all out move to studless is primarily driven by patenting, and only secondarily by improved realness. Lego had used the studded design for decades prior to the switch; they began full transition in close proximity to the original patents expiring and beginning to lose patent lawsuits. What is the only solution to that? Branding (read: licensed themes) and new ideas (read: new patents). When it comes down to it, that toy company we all love(d) is actually a very well-managed business with strong survival technics <a href="#3">[3]</a>.</p><p>I have to give the point here to the studless technic.</p><h2 id="the-ultimate-winner" tabindex="-1"><a class="header-anchor" href="#the-ultimate-winner"><span>The ultimate winner</span></a></h2><p>The ultimate winner is the studless technic.</p><h2 id="bibliography" tabindex="-1"><a class="header-anchor" href="#bibliography"><span>Bibliography</span></a></h2><div id="1"><a>[1]</a> Unbrickme. (2022, January 29). <i>Was old technic really better?</i>. YouTube. <a href="https://www.youtube.com/watch?v=z0Z2WiLSnV0" target="_blank">https://www.youtube.com/watch?v=z0Z2WiLSnV0</a></div><br><div id="2"><a>[2]</a> Bricks Master Builders. (2022, August 1). <i>Why does Lego Technic use studless designs?</i>. YouTube. <a href="https://www.youtube.com/watch?v=34LuzsAxhFc" target="_blank">https://www.youtube.com/watch?v=34LuzsAxhFc</a></div><br><div id="3"><a>[3]</a> Blackmore, C. (2013, February 19). Stack Exchange. <a href="https://bricks.stackexchange.com/questions/1912/why-does-lego-now-use-studless-technic-designs" target="_blank">https://bricks.stackexchange.com/questions/1912/why-does-lego-now-use-studless-technic-designs</a></div><br><div id="4"><a>[4]</a> Wikimedia Foundation. (2024, April 6). <i>Lego technic</i>. Wikipedia. <a href="https://en.wikipedia.org/wiki/Lego_Technic" target="_blank">https://en.wikipedia.org/wiki/Lego_Technic</a></div>',33),o={},r=(0,i(6262).A)(o,[["render",function(e,t){return(0,n.uX)(),(0,n.CE)("div",null,[a,(0,n.Q3)(" more "),s])}]]),l=JSON.parse('{"path":"/articles/lego/1.html","title":"Studded vs studless lego technic","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-04-12T00:00:00.000Z","category":["toy"],"tag":["lego","technic"]},"headers":[{"level":2,"title":"Was Old Technic Really Better?","slug":"was-old-technic-really-better","link":"#was-old-technic-really-better","children":[]},{"level":2,"title":"Mechanisms","slug":"mechanisms","link":"#mechanisms","children":[]},{"level":2,"title":"Playability","slug":"playability","link":"#playability","children":[]},{"level":2,"title":"Aesthenics","slug":"aesthenics","link":"#aesthenics","children":[]},{"level":2,"title":"Design considerations","slug":"design-considerations","link":"#design-considerations","children":[]},{"level":2,"title":"Patenting","slug":"patenting","link":"#patenting","children":[]},{"level":2,"title":"The ultimate winner","slug":"the-ultimate-winner","link":"#the-ultimate-winner","children":[]},{"level":2,"title":"Bibliography","slug":"bibliography","link":"#bibliography","children":[]}],"git":{"createdTime":1711976061000,"updatedTime":1712953161000,"contributors":[{"name":"Tari Balázs","email":"taribalazs2020@gmail.com","commits":3}]},"readingTime":{"minutes":4.37,"words":1312},"filePathRelative":"articles/lego/1.md","localizedDate":"April 12, 2024","excerpt":"\\n"}')},5694:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>c,data:()=>d});var n=i(641);const a=(0,n.Lk)("h1",{id:"programming-in-c",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#programming-in-c"},[(0,n.Lk)("span",null,"Programming in C")])],-1),s=(0,n.Lk)("h2",{id:"introduction",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#introduction"},[(0,n.Lk)("span",null,"Introduction")])],-1),o=(0,n.Lk)("p",null,"Here we can study the basics of programming in C.",-1),r=(0,n.Lk)("h2",{id:"link",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#link"},[(0,n.Lk)("span",null,"Link")])],-1),l={href:"https://github.com/physx-is-fun/C-tutorial",target:"_blank",rel:"noopener noreferrer"},h={},c=(0,i(6262).A)(h,[["render",function(e,t){const i=(0,n.g2)("ExternalLinkIcon");return(0,n.uX)(),(0,n.CE)("div",null,[a,(0,n.Q3)(" more "),s,o,r,(0,n.Lk)("p",null,[(0,n.Lk)("a",l,[(0,n.eW)("https://github.com/physx-is-fun/C-tutorial"),(0,n.bF)(i)])])])}]]),d=JSON.parse('{"path":"/software_development/c/1.html","title":"Programming in C","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-03-31T00:00:00.000Z","category":["Software"],"tag":["c","programming"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Link","slug":"link","link":"#link","children":[]}],"git":{"createdTime":1711976061000,"updatedTime":1712067906000,"contributors":[{"name":"Tari Balázs","email":"taribalazs2020@gmail.com","commits":2}]},"readingTime":{"minutes":0.11,"words":34},"filePathRelative":"software_development/c/1.md","localizedDate":"March 31, 2024","excerpt":"\\n"}')},129:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>l,data:()=>h});var n=i(641);const a=(0,n.Lk)("h1",{id:"vuepress-blog",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#vuepress-blog"},[(0,n.Lk)("span",null,"Vuepress blog")])],-1),s=(0,n.Lk)("h2",{id:"link",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#link"},[(0,n.Lk)("span",null,"Link")])],-1),o={href:"https://github.com/physx-is-fun/vuepress-blog",target:"_blank",rel:"noopener noreferrer"},r={},l=(0,i(6262).A)(r,[["render",function(e,t){const i=(0,n.g2)("ExternalLinkIcon");return(0,n.uX)(),(0,n.CE)("div",null,[a,(0,n.Q3)(" more "),s,(0,n.Lk)("p",null,[(0,n.Lk)("a",o,[(0,n.eW)("https://github.com/physx-is-fun/vuepress-blog"),(0,n.bF)(i)])])])}]]),h=JSON.parse('{"path":"/software_development/javascript/1.html","title":"Vuepress blog","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-03-31T00:00:00.000Z","category":["Software"],"tag":["javascript","programming","typescript","css"]},"headers":[{"level":2,"title":"Link","slug":"link","link":"#link","children":[]}],"git":{"createdTime":1711976061000,"updatedTime":1712067906000,"contributors":[{"name":"Tari Balázs","email":"taribalazs2020@gmail.com","commits":2}]},"readingTime":{"minutes":0.08,"words":24},"filePathRelative":"software_development/javascript/1.md","localizedDate":"March 31, 2024","excerpt":"\\n"}')},4909:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>p,data:()=>m});var n=i(641);const a=(0,n.Lk)("h1",{id:"laser-engraver",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#laser-engraver"},[(0,n.Lk)("span",null,"Laser engraver")])],-1),s=(0,n.Fv)('<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>With this software we can simulate the laser engraving process.</p><iframe src="https://drive.google.com/file/d/1NJJcMpL3XJi8zDWmgwmDcWCDUcIrsOr5/preview" width="640" height="480" allow="autoplay"></iframe><h2 id="link" tabindex="-1"><a class="header-anchor" href="#link"><span>Link</span></a></h2>',4),o={href:"https://github.com/physx-is-fun/Laser-engraver",target:"_blank",rel:"noopener noreferrer"},r=(0,n.Lk)("h2",{id:"dependencies",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#dependencies"},[(0,n.Lk)("span",null,"Dependencies")])],-1),l=(0,n.Lk)("p",null,"Labview 2023 Q1 Community Edition",-1),h=(0,n.Lk)("p",null,"Digilent LINX (Control Arduino, Rasberry Pi, BeagleBone and more) version 3.0.1.192 (NI Labview Tools Network, Digilent)",-1),c=(0,n.Lk)("p",null,"Labview Interface for Arduino version 2.2.0.79 (NI Labview Tools Network, National Instruments)",-1),d=(0,n.Lk)("p",null,"MakerHub Toolbox version 2.0.0.35 (NI Labview Tools Network, MakerHub)",-1),u={},p=(0,i(6262).A)(u,[["render",function(e,t){const i=(0,n.g2)("ExternalLinkIcon");return(0,n.uX)(),(0,n.CE)("div",null,[a,(0,n.Q3)(" more "),s,(0,n.Lk)("p",null,[(0,n.Lk)("a",o,[(0,n.eW)("https://github.com/physx-is-fun/Laser-engraver"),(0,n.bF)(i)])]),r,l,h,c,d])}]]),m=JSON.parse('{"path":"/software_development/labview/1.html","title":"Laser engraver","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-03-31T00:00:00.000Z","category":["Software"],"tag":["labview","programming","matrix graphics","simulation"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Link","slug":"link","link":"#link","children":[]},{"level":2,"title":"Dependencies","slug":"dependencies","link":"#dependencies","children":[]}],"git":{"createdTime":1711976061000,"updatedTime":1714320386000,"contributors":[{"name":"Tari Balázs","email":"taribalazs2020@gmail.com","commits":2}]},"readingTime":{"minutes":0.3,"words":90},"filePathRelative":"software_development/labview/1.md","localizedDate":"March 31, 2024","excerpt":"\\n"}')},8307:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>c,data:()=>d});var n=i(641);const a=(0,n.Lk)("h1",{id:"programming-in-matlab",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#programming-in-matlab"},[(0,n.Lk)("span",null,"Programming in Matlab")])],-1),s=(0,n.Lk)("h2",{id:"introduction",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#introduction"},[(0,n.Lk)("span",null,"Introduction")])],-1),o=(0,n.Lk)("p",null,"Here we can study the basics of programming in Matlab.",-1),r=(0,n.Lk)("h2",{id:"link",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#link"},[(0,n.Lk)("span",null,"Link")])],-1),l={href:"https://github.com/physx-is-fun/Matlab-tutorial",target:"_blank",rel:"noopener noreferrer"},h={},c=(0,i(6262).A)(h,[["render",function(e,t){const i=(0,n.g2)("ExternalLinkIcon");return(0,n.uX)(),(0,n.CE)("div",null,[a,(0,n.Q3)(" more "),s,o,r,(0,n.Lk)("p",null,[(0,n.Lk)("a",l,[(0,n.eW)("https://github.com/physx-is-fun/Matlab-tutorial"),(0,n.bF)(i)])])])}]]),d=JSON.parse('{"path":"/software_development/matlab/1.html","title":"Programming in Matlab","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-03-31T00:00:00.000Z","category":["Software"],"tag":["matlab","programming"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Link","slug":"link","link":"#link","children":[]}],"git":{"createdTime":1712067906000,"updatedTime":1712067906000,"contributors":[{"name":"Tari Balázs","email":"taribalazs2020@gmail.com","commits":1}]},"readingTime":{"minutes":0.11,"words":34},"filePathRelative":"software_development/matlab/1.md","localizedDate":"March 31, 2024","excerpt":"\\n"}')},4242:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>c,data:()=>d});var n=i(641);const a=(0,n.Lk)("h1",{id:"programming-in-python",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#programming-in-python"},[(0,n.Lk)("span",null,"Programming in Python")])],-1),s=(0,n.Lk)("h2",{id:"introduction",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#introduction"},[(0,n.Lk)("span",null,"Introduction")])],-1),o=(0,n.Lk)("p",null,"Here we can study the basics of programming in Python.",-1),r=(0,n.Lk)("h2",{id:"link",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#link"},[(0,n.Lk)("span",null,"Link")])],-1),l={href:"https://github.com/physx-is-fun/Python-tutorial",target:"_blank",rel:"noopener noreferrer"},h={},c=(0,i(6262).A)(h,[["render",function(e,t){const i=(0,n.g2)("ExternalLinkIcon");return(0,n.uX)(),(0,n.CE)("div",null,[a,(0,n.Q3)(" more "),s,o,r,(0,n.Lk)("p",null,[(0,n.Lk)("a",l,[(0,n.eW)("https://github.com/physx-is-fun/Python-tutorial"),(0,n.bF)(i)])])])}]]),d=JSON.parse('{"path":"/software_development/python/1.html","title":"Programming in Python","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-03-31T00:00:00.000Z","category":["Software"],"tag":["python","programming"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Link","slug":"link","link":"#link","children":[]}],"git":{"createdTime":1712067906000,"updatedTime":1712151641000,"contributors":[{"name":"Tari Balázs","email":"taribalazs2020@gmail.com","commits":2}]},"readingTime":{"minutes":0.11,"words":34},"filePathRelative":"software_development/python/1.md","localizedDate":"March 31, 2024","excerpt":"\\n"}')}}]);